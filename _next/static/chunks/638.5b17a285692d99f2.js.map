{"version":3,"file":"static/chunks/638.5b17a285692d99f2.js","mappings":"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","sources":["webpack://_N_E/../../../node_modules/.pnpm/prop-types@15.8.1/node_modules/prop-types/factoryWithThrowingShims.js","webpack://_N_E/../../../node_modules/.pnpm/prop-types@15.8.1/node_modules/prop-types/index.js","webpack://_N_E/../../../node_modules/.pnpm/prop-types@15.8.1/node_modules/prop-types/lib/ReactPropTypesSecret.js","webpack://_N_E/../../../node_modules/.pnpm/split.js@1.6.5/node_modules/split.js/dist/split.es.js","webpack://_N_E/../../../node_modules/.pnpm/react-split@2.0.14_react@18.3.1/node_modules/react-split/dist/react-split.es.js","webpack://_N_E/../../../node_modules/.pnpm/remeda@2.12.1/node_modules/remeda/dist/chunk-SQKQXXQG.js","webpack://_N_E/./app/json/JsonEditor.tsx","webpack://_N_E/../common/constant/Constant.tsx","webpack://_N_E/../../../node_modules/.pnpm/jsoneditor@10.1.0/node_modules/jsoneditor/dist/jsoneditor.min.css"],"sourcesContent":["/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n","// The programming goals of Split.js are to deliver readable, understandable and\n// maintainable code, while at the same time manually optimizing for tiny minified file size,\n// browser compatibility without additional requirements\n// and very few assumptions about the user's page layout.\nvar global = typeof window !== 'undefined' ? window : null;\nvar ssr = global === null;\nvar document = !ssr ? global.document : undefined;\n\n// Save a couple long function names that are used frequently.\n// This optimization saves around 400 bytes.\nvar addEventListener = 'addEventListener';\nvar removeEventListener = 'removeEventListener';\nvar getBoundingClientRect = 'getBoundingClientRect';\nvar gutterStartDragging = '_a';\nvar aGutterSize = '_b';\nvar bGutterSize = '_c';\nvar HORIZONTAL = 'horizontal';\nvar NOOP = function () { return false; };\n\n// Helper function determines which prefixes of CSS calc we need.\n// We only need to do this once on startup, when this anonymous function is called.\n//\n// Tests -webkit, -moz and -o prefixes. Modified from StackOverflow:\n// http://stackoverflow.com/questions/16625140/js-feature-detection-to-detect-the-usage-of-webkit-calc-over-calc/16625167#16625167\nvar calc = ssr\n    ? 'calc'\n    : ((['', '-webkit-', '-moz-', '-o-']\n          .filter(function (prefix) {\n              var el = document.createElement('div');\n              el.style.cssText = \"width:\" + prefix + \"calc(9px)\";\n\n              return !!el.style.length\n          })\n          .shift()) + \"calc\");\n\n// Helper function checks if its argument is a string-like type\nvar isString = function (v) { return typeof v === 'string' || v instanceof String; };\n\n// Helper function allows elements and string selectors to be used\n// interchangeably. In either case an element is returned. This allows us to\n// do `Split([elem1, elem2])` as well as `Split(['#id1', '#id2'])`.\nvar elementOrSelector = function (el) {\n    if (isString(el)) {\n        var ele = document.querySelector(el);\n        if (!ele) {\n            throw new Error((\"Selector \" + el + \" did not match a DOM element\"))\n        }\n        return ele\n    }\n\n    return el\n};\n\n// Helper function gets a property from the properties object, with a default fallback\nvar getOption = function (options, propName, def) {\n    var value = options[propName];\n    if (value !== undefined) {\n        return value\n    }\n    return def\n};\n\nvar getGutterSize = function (gutterSize, isFirst, isLast, gutterAlign) {\n    if (isFirst) {\n        if (gutterAlign === 'end') {\n            return 0\n        }\n        if (gutterAlign === 'center') {\n            return gutterSize / 2\n        }\n    } else if (isLast) {\n        if (gutterAlign === 'start') {\n            return 0\n        }\n        if (gutterAlign === 'center') {\n            return gutterSize / 2\n        }\n    }\n\n    return gutterSize\n};\n\n// Default options\nvar defaultGutterFn = function (i, gutterDirection) {\n    var gut = document.createElement('div');\n    gut.className = \"gutter gutter-\" + gutterDirection;\n    return gut\n};\n\nvar defaultElementStyleFn = function (dim, size, gutSize) {\n    var style = {};\n\n    if (!isString(size)) {\n        style[dim] = calc + \"(\" + size + \"% - \" + gutSize + \"px)\";\n    } else {\n        style[dim] = size;\n    }\n\n    return style\n};\n\nvar defaultGutterStyleFn = function (dim, gutSize) {\n    var obj;\n\n    return (( obj = {}, obj[dim] = (gutSize + \"px\"), obj ));\n};\n\n// The main function to initialize a split. Split.js thinks about each pair\n// of elements as an independant pair. Dragging the gutter between two elements\n// only changes the dimensions of elements in that pair. This is key to understanding\n// how the following functions operate, since each function is bound to a pair.\n//\n// A pair object is shaped like this:\n//\n// {\n//     a: DOM element,\n//     b: DOM element,\n//     aMin: Number,\n//     bMin: Number,\n//     dragging: Boolean,\n//     parent: DOM element,\n//     direction: 'horizontal' | 'vertical'\n// }\n//\n// The basic sequence:\n//\n// 1. Set defaults to something sane. `options` doesn't have to be passed at all.\n// 2. Initialize a bunch of strings based on the direction we're splitting.\n//    A lot of the behavior in the rest of the library is paramatized down to\n//    rely on CSS strings and classes.\n// 3. Define the dragging helper functions, and a few helpers to go with them.\n// 4. Loop through the elements while pairing them off. Every pair gets an\n//    `pair` object and a gutter.\n// 5. Actually size the pair elements, insert gutters and attach event listeners.\nvar Split = function (idsOption, options) {\n    if ( options === void 0 ) options = {};\n\n    if (ssr) { return {} }\n\n    var ids = idsOption;\n    var dimension;\n    var clientAxis;\n    var position;\n    var positionEnd;\n    var clientSize;\n    var elements;\n\n    // Allow HTMLCollection to be used as an argument when supported\n    if (Array.from) {\n        ids = Array.from(ids);\n    }\n\n    // All DOM elements in the split should have a common parent. We can grab\n    // the first elements parent and hope users read the docs because the\n    // behavior will be whacky otherwise.\n    var firstElement = elementOrSelector(ids[0]);\n    var parent = firstElement.parentNode;\n    var parentStyle = getComputedStyle ? getComputedStyle(parent) : null;\n    var parentFlexDirection = parentStyle ? parentStyle.flexDirection : null;\n\n    // Set default options.sizes to equal percentages of the parent element.\n    var sizes = getOption(options, 'sizes') || ids.map(function () { return 100 / ids.length; });\n\n    // Standardize minSize and maxSize to an array if it isn't already.\n    // This allows minSize and maxSize to be passed as a number.\n    var minSize = getOption(options, 'minSize', 100);\n    var minSizes = Array.isArray(minSize) ? minSize : ids.map(function () { return minSize; });\n    var maxSize = getOption(options, 'maxSize', Infinity);\n    var maxSizes = Array.isArray(maxSize) ? maxSize : ids.map(function () { return maxSize; });\n\n    // Get other options\n    var expandToMin = getOption(options, 'expandToMin', false);\n    var gutterSize = getOption(options, 'gutterSize', 10);\n    var gutterAlign = getOption(options, 'gutterAlign', 'center');\n    var snapOffset = getOption(options, 'snapOffset', 30);\n    var snapOffsets = Array.isArray(snapOffset) ? snapOffset : ids.map(function () { return snapOffset; });\n    var dragInterval = getOption(options, 'dragInterval', 1);\n    var direction = getOption(options, 'direction', HORIZONTAL);\n    var cursor = getOption(\n        options,\n        'cursor',\n        direction === HORIZONTAL ? 'col-resize' : 'row-resize'\n    );\n    var gutter = getOption(options, 'gutter', defaultGutterFn);\n    var elementStyle = getOption(\n        options,\n        'elementStyle',\n        defaultElementStyleFn\n    );\n    var gutterStyle = getOption(options, 'gutterStyle', defaultGutterStyleFn);\n\n    // 2. Initialize a bunch of strings based on the direction we're splitting.\n    // A lot of the behavior in the rest of the library is paramatized down to\n    // rely on CSS strings and classes.\n    if (direction === HORIZONTAL) {\n        dimension = 'width';\n        clientAxis = 'clientX';\n        position = 'left';\n        positionEnd = 'right';\n        clientSize = 'clientWidth';\n    } else if (direction === 'vertical') {\n        dimension = 'height';\n        clientAxis = 'clientY';\n        position = 'top';\n        positionEnd = 'bottom';\n        clientSize = 'clientHeight';\n    }\n\n    // 3. Define the dragging helper functions, and a few helpers to go with them.\n    // Each helper is bound to a pair object that contains its metadata. This\n    // also makes it easy to store references to listeners that that will be\n    // added and removed.\n    //\n    // Even though there are no other functions contained in them, aliasing\n    // this to self saves 50 bytes or so since it's used so frequently.\n    //\n    // The pair object saves metadata like dragging state, position and\n    // event listener references.\n\n    function setElementSize(el, size, gutSize, i) {\n        // Split.js allows setting sizes via numbers (ideally), or if you must,\n        // by string, like '300px'. This is less than ideal, because it breaks\n        // the fluid layout that `calc(% - px)` provides. You're on your own if you do that,\n        // make sure you calculate the gutter size by hand.\n        var style = elementStyle(dimension, size, gutSize, i);\n\n        Object.keys(style).forEach(function (prop) {\n            // eslint-disable-next-line no-param-reassign\n            el.style[prop] = style[prop];\n        });\n    }\n\n    function setGutterSize(gutterElement, gutSize, i) {\n        var style = gutterStyle(dimension, gutSize, i);\n\n        Object.keys(style).forEach(function (prop) {\n            // eslint-disable-next-line no-param-reassign\n            gutterElement.style[prop] = style[prop];\n        });\n    }\n\n    function getSizes() {\n        return elements.map(function (element) { return element.size; })\n    }\n\n    // Supports touch events, but not multitouch, so only the first\n    // finger `touches[0]` is counted.\n    function getMousePosition(e) {\n        if ('touches' in e) { return e.touches[0][clientAxis] }\n        return e[clientAxis]\n    }\n\n    // Actually adjust the size of elements `a` and `b` to `offset` while dragging.\n    // calc is used to allow calc(percentage + gutterpx) on the whole split instance,\n    // which allows the viewport to be resized without additional logic.\n    // Element a's size is the same as offset. b's size is total size - a size.\n    // Both sizes are calculated from the initial parent percentage,\n    // then the gutter size is subtracted.\n    function adjust(offset) {\n        var a = elements[this.a];\n        var b = elements[this.b];\n        var percentage = a.size + b.size;\n\n        a.size = (offset / this.size) * percentage;\n        b.size = percentage - (offset / this.size) * percentage;\n\n        setElementSize(a.element, a.size, this[aGutterSize], a.i);\n        setElementSize(b.element, b.size, this[bGutterSize], b.i);\n    }\n\n    // drag, where all the magic happens. The logic is really quite simple:\n    //\n    // 1. Ignore if the pair is not dragging.\n    // 2. Get the offset of the event.\n    // 3. Snap offset to min if within snappable range (within min + snapOffset).\n    // 4. Actually adjust each element in the pair to offset.\n    //\n    // ---------------------------------------------------------------------\n    // |    | <- a.minSize               ||              b.minSize -> |    |\n    // |    |  | <- this.snapOffset      ||     this.snapOffset -> |  |    |\n    // |    |  |                         ||                        |  |    |\n    // |    |  |                         ||                        |  |    |\n    // ---------------------------------------------------------------------\n    // | <- this.start                                        this.size -> |\n    function drag(e) {\n        var offset;\n        var a = elements[this.a];\n        var b = elements[this.b];\n\n        if (!this.dragging) { return }\n\n        // Get the offset of the event from the first side of the\n        // pair `this.start`. Then offset by the initial position of the\n        // mouse compared to the gutter size.\n        offset =\n            getMousePosition(e) -\n            this.start +\n            (this[aGutterSize] - this.dragOffset);\n\n        if (dragInterval > 1) {\n            offset = Math.round(offset / dragInterval) * dragInterval;\n        }\n\n        // If within snapOffset of min or max, set offset to min or max.\n        // snapOffset buffers a.minSize and b.minSize, so logic is opposite for both.\n        // Include the appropriate gutter sizes to prevent overflows.\n        if (offset <= a.minSize + a.snapOffset + this[aGutterSize]) {\n            offset = a.minSize + this[aGutterSize];\n        } else if (\n            offset >=\n            this.size - (b.minSize + b.snapOffset + this[bGutterSize])\n        ) {\n            offset = this.size - (b.minSize + this[bGutterSize]);\n        }\n\n        if (offset >= a.maxSize - a.snapOffset + this[aGutterSize]) {\n            offset = a.maxSize + this[aGutterSize];\n        } else if (\n            offset <=\n            this.size - (b.maxSize - b.snapOffset + this[bGutterSize])\n        ) {\n            offset = this.size - (b.maxSize + this[bGutterSize]);\n        }\n\n        // Actually adjust the size.\n        adjust.call(this, offset);\n\n        // Call the drag callback continously. Don't do anything too intensive\n        // in this callback.\n        getOption(options, 'onDrag', NOOP)(getSizes());\n    }\n\n    // Cache some important sizes when drag starts, so we don't have to do that\n    // continously:\n    //\n    // `size`: The total size of the pair. First + second + first gutter + second gutter.\n    // `start`: The leading side of the first element.\n    //\n    // ------------------------------------------------\n    // |      aGutterSize -> |||                      |\n    // |                     |||                      |\n    // |                     |||                      |\n    // |                     ||| <- bGutterSize       |\n    // ------------------------------------------------\n    // | <- start                             size -> |\n    function calculateSizes() {\n        // Figure out the parent size minus padding.\n        var a = elements[this.a].element;\n        var b = elements[this.b].element;\n\n        var aBounds = a[getBoundingClientRect]();\n        var bBounds = b[getBoundingClientRect]();\n\n        this.size =\n            aBounds[dimension] +\n            bBounds[dimension] +\n            this[aGutterSize] +\n            this[bGutterSize];\n        this.start = aBounds[position];\n        this.end = aBounds[positionEnd];\n    }\n\n    function innerSize(element) {\n        // Return nothing if getComputedStyle is not supported (< IE9)\n        // Or if parent element has no layout yet\n        if (!getComputedStyle) { return null }\n\n        var computedStyle = getComputedStyle(element);\n\n        if (!computedStyle) { return null }\n\n        var size = element[clientSize];\n\n        if (size === 0) { return null }\n\n        if (direction === HORIZONTAL) {\n            size -=\n                parseFloat(computedStyle.paddingLeft) +\n                parseFloat(computedStyle.paddingRight);\n        } else {\n            size -=\n                parseFloat(computedStyle.paddingTop) +\n                parseFloat(computedStyle.paddingBottom);\n        }\n\n        return size\n    }\n\n    // When specifying percentage sizes that are less than the computed\n    // size of the element minus the gutter, the lesser percentages must be increased\n    // (and decreased from the other elements) to make space for the pixels\n    // subtracted by the gutters.\n    function trimToMin(sizesToTrim) {\n        // Try to get inner size of parent element.\n        // If it's no supported, return original sizes.\n        var parentSize = innerSize(parent);\n        if (parentSize === null) {\n            return sizesToTrim\n        }\n\n        if (minSizes.reduce(function (a, b) { return a + b; }, 0) > parentSize) {\n            return sizesToTrim\n        }\n\n        // Keep track of the excess pixels, the amount of pixels over the desired percentage\n        // Also keep track of the elements with pixels to spare, to decrease after if needed\n        var excessPixels = 0;\n        var toSpare = [];\n\n        var pixelSizes = sizesToTrim.map(function (size, i) {\n            // Convert requested percentages to pixel sizes\n            var pixelSize = (parentSize * size) / 100;\n            var elementGutterSize = getGutterSize(\n                gutterSize,\n                i === 0,\n                i === sizesToTrim.length - 1,\n                gutterAlign\n            );\n            var elementMinSize = minSizes[i] + elementGutterSize;\n\n            // If element is too smal, increase excess pixels by the difference\n            // and mark that it has no pixels to spare\n            if (pixelSize < elementMinSize) {\n                excessPixels += elementMinSize - pixelSize;\n                toSpare.push(0);\n                return elementMinSize\n            }\n\n            // Otherwise, mark the pixels it has to spare and return it's original size\n            toSpare.push(pixelSize - elementMinSize);\n            return pixelSize\n        });\n\n        // If nothing was adjusted, return the original sizes\n        if (excessPixels === 0) {\n            return sizesToTrim\n        }\n\n        return pixelSizes.map(function (pixelSize, i) {\n            var newPixelSize = pixelSize;\n\n            // While there's still pixels to take, and there's enough pixels to spare,\n            // take as many as possible up to the total excess pixels\n            if (excessPixels > 0 && toSpare[i] - excessPixels > 0) {\n                var takenPixels = Math.min(\n                    excessPixels,\n                    toSpare[i] - excessPixels\n                );\n\n                // Subtract the amount taken for the next iteration\n                excessPixels -= takenPixels;\n                newPixelSize = pixelSize - takenPixels;\n            }\n\n            // Return the pixel size adjusted as a percentage\n            return (newPixelSize / parentSize) * 100\n        })\n    }\n\n    // stopDragging is very similar to startDragging in reverse.\n    function stopDragging() {\n        var self = this;\n        var a = elements[self.a].element;\n        var b = elements[self.b].element;\n\n        if (self.dragging) {\n            getOption(options, 'onDragEnd', NOOP)(getSizes());\n        }\n\n        self.dragging = false;\n\n        // Remove the stored event listeners. This is why we store them.\n        global[removeEventListener]('mouseup', self.stop);\n        global[removeEventListener]('touchend', self.stop);\n        global[removeEventListener]('touchcancel', self.stop);\n        global[removeEventListener]('mousemove', self.move);\n        global[removeEventListener]('touchmove', self.move);\n\n        // Clear bound function references\n        self.stop = null;\n        self.move = null;\n\n        a[removeEventListener]('selectstart', NOOP);\n        a[removeEventListener]('dragstart', NOOP);\n        b[removeEventListener]('selectstart', NOOP);\n        b[removeEventListener]('dragstart', NOOP);\n\n        a.style.userSelect = '';\n        a.style.webkitUserSelect = '';\n        a.style.MozUserSelect = '';\n        a.style.pointerEvents = '';\n\n        b.style.userSelect = '';\n        b.style.webkitUserSelect = '';\n        b.style.MozUserSelect = '';\n        b.style.pointerEvents = '';\n\n        self.gutter.style.cursor = '';\n        self.parent.style.cursor = '';\n        document.body.style.cursor = '';\n    }\n\n    // startDragging calls `calculateSizes` to store the inital size in the pair object.\n    // It also adds event listeners for mouse/touch events,\n    // and prevents selection while dragging so avoid the selecting text.\n    function startDragging(e) {\n        // Right-clicking can't start dragging.\n        if ('button' in e && e.button !== 0) {\n            return\n        }\n\n        // Alias frequently used variables to save space. 200 bytes.\n        var self = this;\n        var a = elements[self.a].element;\n        var b = elements[self.b].element;\n\n        // Call the onDragStart callback.\n        if (!self.dragging) {\n            getOption(options, 'onDragStart', NOOP)(getSizes());\n        }\n\n        // Don't actually drag the element. We emulate that in the drag function.\n        e.preventDefault();\n\n        // Set the dragging property of the pair object.\n        self.dragging = true;\n\n        // Create two event listeners bound to the same pair object and store\n        // them in the pair object.\n        self.move = drag.bind(self);\n        self.stop = stopDragging.bind(self);\n\n        // All the binding. `window` gets the stop events in case we drag out of the elements.\n        global[addEventListener]('mouseup', self.stop);\n        global[addEventListener]('touchend', self.stop);\n        global[addEventListener]('touchcancel', self.stop);\n        global[addEventListener]('mousemove', self.move);\n        global[addEventListener]('touchmove', self.move);\n\n        // Disable selection. Disable!\n        a[addEventListener]('selectstart', NOOP);\n        a[addEventListener]('dragstart', NOOP);\n        b[addEventListener]('selectstart', NOOP);\n        b[addEventListener]('dragstart', NOOP);\n\n        a.style.userSelect = 'none';\n        a.style.webkitUserSelect = 'none';\n        a.style.MozUserSelect = 'none';\n        a.style.pointerEvents = 'none';\n\n        b.style.userSelect = 'none';\n        b.style.webkitUserSelect = 'none';\n        b.style.MozUserSelect = 'none';\n        b.style.pointerEvents = 'none';\n\n        // Set the cursor at multiple levels\n        self.gutter.style.cursor = cursor;\n        self.parent.style.cursor = cursor;\n        document.body.style.cursor = cursor;\n\n        // Cache the initial sizes of the pair.\n        calculateSizes.call(self);\n\n        // Determine the position of the mouse compared to the gutter\n        self.dragOffset = getMousePosition(e) - self.end;\n    }\n\n    // adjust sizes to ensure percentage is within min size and gutter.\n    sizes = trimToMin(sizes);\n\n    // 5. Create pair and element objects. Each pair has an index reference to\n    // elements `a` and `b` of the pair (first and second elements).\n    // Loop through the elements while pairing them off. Every pair gets a\n    // `pair` object and a gutter.\n    //\n    // Basic logic:\n    //\n    // - Starting with the second element `i > 0`, create `pair` objects with\n    //   `a = i - 1` and `b = i`\n    // - Set gutter sizes based on the _pair_ being first/last. The first and last\n    //   pair have gutterSize / 2, since they only have one half gutter, and not two.\n    // - Create gutter elements and add event listeners.\n    // - Set the size of the elements, minus the gutter sizes.\n    //\n    // -----------------------------------------------------------------------\n    // |     i=0     |         i=1         |        i=2       |      i=3     |\n    // |             |                     |                  |              |\n    // |           pair 0                pair 1             pair 2           |\n    // |             |                     |                  |              |\n    // -----------------------------------------------------------------------\n    var pairs = [];\n    elements = ids.map(function (id, i) {\n        // Create the element object.\n        var element = {\n            element: elementOrSelector(id),\n            size: sizes[i],\n            minSize: minSizes[i],\n            maxSize: maxSizes[i],\n            snapOffset: snapOffsets[i],\n            i: i,\n        };\n\n        var pair;\n\n        if (i > 0) {\n            // Create the pair object with its metadata.\n            pair = {\n                a: i - 1,\n                b: i,\n                dragging: false,\n                direction: direction,\n                parent: parent,\n            };\n\n            pair[aGutterSize] = getGutterSize(\n                gutterSize,\n                i - 1 === 0,\n                false,\n                gutterAlign\n            );\n            pair[bGutterSize] = getGutterSize(\n                gutterSize,\n                false,\n                i === ids.length - 1,\n                gutterAlign\n            );\n\n            // if the parent has a reverse flex-direction, switch the pair elements.\n            if (\n                parentFlexDirection === 'row-reverse' ||\n                parentFlexDirection === 'column-reverse'\n            ) {\n                var temp = pair.a;\n                pair.a = pair.b;\n                pair.b = temp;\n            }\n        }\n\n        // Determine the size of the current element. IE8 is supported by\n        // staticly assigning sizes without draggable gutters. Assigns a string\n        // to `size`.\n        //\n        // Create gutter elements for each pair.\n        if (i > 0) {\n            var gutterElement = gutter(i, direction, element.element);\n            setGutterSize(gutterElement, gutterSize, i);\n\n            // Save bound event listener for removal later\n            pair[gutterStartDragging] = startDragging.bind(pair);\n\n            // Attach bound event listener\n            gutterElement[addEventListener](\n                'mousedown',\n                pair[gutterStartDragging]\n            );\n            gutterElement[addEventListener](\n                'touchstart',\n                pair[gutterStartDragging]\n            );\n\n            parent.insertBefore(gutterElement, element.element);\n\n            pair.gutter = gutterElement;\n        }\n\n        setElementSize(\n            element.element,\n            element.size,\n            getGutterSize(\n                gutterSize,\n                i === 0,\n                i === ids.length - 1,\n                gutterAlign\n            ),\n            i\n        );\n\n        // After the first iteration, and we have a pair object, append it to the\n        // list of pairs.\n        if (i > 0) {\n            pairs.push(pair);\n        }\n\n        return element\n    });\n\n    function adjustToMin(element) {\n        var isLast = element.i === pairs.length;\n        var pair = isLast ? pairs[element.i - 1] : pairs[element.i];\n\n        calculateSizes.call(pair);\n\n        var size = isLast\n            ? pair.size - element.minSize - pair[bGutterSize]\n            : element.minSize + pair[aGutterSize];\n\n        adjust.call(pair, size);\n    }\n\n    elements.forEach(function (element) {\n        var computedSize = element.element[getBoundingClientRect]()[dimension];\n\n        if (computedSize < element.minSize) {\n            if (expandToMin) {\n                adjustToMin(element);\n            } else {\n                // eslint-disable-next-line no-param-reassign\n                element.minSize = computedSize;\n            }\n        }\n    });\n\n    function setSizes(newSizes) {\n        var trimmed = trimToMin(newSizes);\n        trimmed.forEach(function (newSize, i) {\n            if (i > 0) {\n                var pair = pairs[i - 1];\n\n                var a = elements[pair.a];\n                var b = elements[pair.b];\n\n                a.size = trimmed[i - 1];\n                b.size = newSize;\n\n                setElementSize(a.element, a.size, pair[aGutterSize], a.i);\n                setElementSize(b.element, b.size, pair[bGutterSize], b.i);\n            }\n        });\n    }\n\n    function destroy(preserveStyles, preserveGutter) {\n        pairs.forEach(function (pair) {\n            if (preserveGutter !== true) {\n                pair.parent.removeChild(pair.gutter);\n            } else {\n                pair.gutter[removeEventListener](\n                    'mousedown',\n                    pair[gutterStartDragging]\n                );\n                pair.gutter[removeEventListener](\n                    'touchstart',\n                    pair[gutterStartDragging]\n                );\n            }\n\n            if (preserveStyles !== true) {\n                var style = elementStyle(\n                    dimension,\n                    pair.a.size,\n                    pair[aGutterSize]\n                );\n\n                Object.keys(style).forEach(function (prop) {\n                    elements[pair.a].element.style[prop] = '';\n                    elements[pair.b].element.style[prop] = '';\n                });\n            }\n        });\n    }\n\n    return {\n        setSizes: setSizes,\n        getSizes: getSizes,\n        collapse: function collapse(i) {\n            adjustToMin(elements[i]);\n        },\n        destroy: destroy,\n        parent: parent,\n        pairs: pairs,\n    }\n};\n\nexport default Split;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Split from 'split.js';\n\nfunction objectWithoutProperties (obj, exclude) { var target = {}; for (var k in obj) if (Object.prototype.hasOwnProperty.call(obj, k) && exclude.indexOf(k) === -1) target[k] = obj[k]; return target; }\n\nvar SplitWrapper = /*@__PURE__*/(function (superclass) {\n    function SplitWrapper () {\n        superclass.apply(this, arguments);\n    }\n\n    if ( superclass ) SplitWrapper.__proto__ = superclass;\n    SplitWrapper.prototype = Object.create( superclass && superclass.prototype );\n    SplitWrapper.prototype.constructor = SplitWrapper;\n\n    SplitWrapper.prototype.componentDidMount = function componentDidMount () {\n        var ref = this.props;\n        ref.children;\n        var gutter = ref.gutter;\n        var rest = objectWithoutProperties( ref, [\"children\", \"gutter\"] );\n        var options = rest;\n\n        options.gutter = function (index, direction) {\n            var gutterElement;\n\n            if (gutter) {\n                gutterElement = gutter(index, direction);\n            } else {\n                gutterElement = document.createElement('div');\n                gutterElement.className = \"gutter gutter-\" + direction;\n            }\n\n            // eslint-disable-next-line no-underscore-dangle\n            gutterElement.__isSplitGutter = true;\n            return gutterElement\n        };\n\n        this.split = Split(this.parent.children, options);\n    };\n\n    SplitWrapper.prototype.componentDidUpdate = function componentDidUpdate (prevProps) {\n        var this$1 = this;\n\n        var ref = this.props;\n        ref.children;\n        var minSize = ref.minSize;\n        var sizes = ref.sizes;\n        var collapsed = ref.collapsed;\n        var rest = objectWithoutProperties( ref, [\"children\", \"minSize\", \"sizes\", \"collapsed\"] );\n        var options = rest;\n        var prevMinSize = prevProps.minSize;\n        var prevSizes = prevProps.sizes;\n        var prevCollapsed = prevProps.collapsed;\n\n        var otherProps = [\n            'maxSize',\n            'expandToMin',\n            'gutterSize',\n            'gutterAlign',\n            'snapOffset',\n            'dragInterval',\n            'direction',\n            'cursor' ];\n\n        var needsRecreate = otherProps\n            // eslint-disable-next-line react/destructuring-assignment\n            .map(function (prop) { return this$1.props[prop] !== prevProps[prop]; })\n            .reduce(function (accum, same) { return accum || same; }, false);\n\n        // Compare minSize when both are arrays, when one is an array and when neither is an array\n        if (Array.isArray(minSize) && Array.isArray(prevMinSize)) {\n            var minSizeChanged = false;\n\n            minSize.forEach(function (minSizeI, i) {\n                minSizeChanged = minSizeChanged || minSizeI !== prevMinSize[i];\n            });\n\n            needsRecreate = needsRecreate || minSizeChanged;\n        } else if (Array.isArray(minSize) || Array.isArray(prevMinSize)) {\n            needsRecreate = true;\n        } else {\n            needsRecreate = needsRecreate || minSize !== prevMinSize;\n        }\n\n        // Destroy and re-create split if options changed\n        if (needsRecreate) {\n            options.minSize = minSize;\n            options.sizes = sizes || this.split.getSizes();\n            this.split.destroy(true, true);\n            options.gutter = function (index, direction, pairB) { return pairB.previousSibling; };\n            this.split = Split(\n                Array.from(this.parent.children).filter(\n                    // eslint-disable-next-line no-underscore-dangle\n                    function (element) { return !element.__isSplitGutter; }\n                ),\n                options\n            );\n        } else if (sizes) {\n            // If only the size has changed, set the size. No need to do this if re-created.\n            var sizeChanged = false;\n\n            sizes.forEach(function (sizeI, i) {\n                sizeChanged = sizeChanged || sizeI !== prevSizes[i];\n            });\n\n            if (sizeChanged) {\n                // eslint-disable-next-line react/destructuring-assignment\n                this.split.setSizes(this.props.sizes);\n            }\n        }\n\n        // Collapse after re-created or when collapsed changed.\n        if (\n            Number.isInteger(collapsed) &&\n            (collapsed !== prevCollapsed || needsRecreate)\n        ) {\n            this.split.collapse(collapsed);\n        }\n    };\n\n    SplitWrapper.prototype.componentWillUnmount = function componentWillUnmount () {\n        this.split.destroy();\n        delete this.split;\n    };\n\n    SplitWrapper.prototype.render = function render () {\n        var this$1 = this;\n\n        var ref = this.props;\n        ref.sizes;\n        ref.minSize;\n        ref.maxSize;\n        ref.expandToMin;\n        ref.gutterSize;\n        ref.gutterAlign;\n        ref.snapOffset;\n        ref.dragInterval;\n        ref.direction;\n        ref.cursor;\n        ref.gutter;\n        ref.elementStyle;\n        ref.gutterStyle;\n        ref.onDrag;\n        ref.onDragStart;\n        ref.onDragEnd;\n        ref.collapsed;\n        var children = ref.children;\n        var rest$1 = objectWithoutProperties( ref, [\"sizes\", \"minSize\", \"maxSize\", \"expandToMin\", \"gutterSize\", \"gutterAlign\", \"snapOffset\", \"dragInterval\", \"direction\", \"cursor\", \"gutter\", \"elementStyle\", \"gutterStyle\", \"onDrag\", \"onDragStart\", \"onDragEnd\", \"collapsed\", \"children\"] );\n        var rest = rest$1;\n\n        return (\n            React.createElement( 'div', Object.assign({},\n                { ref: function (parent) {\n                    this$1.parent = parent;\n                } }, rest),\n                children\n            )\n        )\n    };\n\n    return SplitWrapper;\n}(React.Component));\n\nSplitWrapper.propTypes = {\n    sizes: PropTypes.arrayOf(PropTypes.number),\n    minSize: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.arrayOf(PropTypes.number) ]),\n    maxSize: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.arrayOf(PropTypes.number) ]),\n    expandToMin: PropTypes.bool,\n    gutterSize: PropTypes.number,\n    gutterAlign: PropTypes.string,\n    snapOffset: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.arrayOf(PropTypes.number) ]),\n    dragInterval: PropTypes.number,\n    direction: PropTypes.string,\n    cursor: PropTypes.string,\n    gutter: PropTypes.func,\n    elementStyle: PropTypes.func,\n    gutterStyle: PropTypes.func,\n    onDrag: PropTypes.func,\n    onDragStart: PropTypes.func,\n    onDragEnd: PropTypes.func,\n    collapsed: PropTypes.number,\n    children: PropTypes.arrayOf(PropTypes.element),\n};\n\nSplitWrapper.defaultProps = {\n    sizes: undefined,\n    minSize: undefined,\n    maxSize: undefined,\n    expandToMin: undefined,\n    gutterSize: undefined,\n    gutterAlign: undefined,\n    snapOffset: undefined,\n    dragInterval: undefined,\n    direction: undefined,\n    cursor: undefined,\n    gutter: undefined,\n    elementStyle: undefined,\n    gutterStyle: undefined,\n    onDrag: undefined,\n    onDragStart: undefined,\n    onDragEnd: undefined,\n    collapsed: undefined,\n    children: undefined,\n};\n\nexport default SplitWrapper;\n","function e(n){return n==null}export{e as a};\n","/*\n *  @(#)JsonEditor.tsx 2024.10.14\n *\n *  Copyright 2024 CKP Corp. All rights Reserved.\n *  CKP PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.\n */\n\n'use client'\n\nimport {useEffect, useRef} from 'react'\nimport 'jsoneditor/dist/jsoneditor.min.css'\nimport JSONEditor from 'jsoneditor'\nimport Split from 'react-split'\nimport * as R from 'remeda'\nimport {EMPTY_OBJECT} from '@nyx/kr-common/constant/Constant'\n\n/**\n * https://github.com/josdejong/jsoneditor\n * https://github.com/josdejong/jsoneditor/tree/master/examples\n * https://github.com/webpatch/JSON-Editor-Extension\n */\n\nconst LOCAL_STORAGE_KEY = 'JSON'\n\nexport default function JsonEditor() {\n    const codeEditorRef = useRef<HTMLDivElement>(null)\n    const viewEditorRef = useRef<HTMLDivElement>(null)\n    const codeEditorInstance = useRef<JSONEditor | null>(null)\n    const viewEditorInstance = useRef<JSONEditor | null>(null)\n\n    useEffect(() => {\n        // left code editor\n        codeEditorInstance.current = new JSONEditor(codeEditorRef.current!, {\n            mode: 'code',\n            onChange: () => {\n                if (viewEditorInstance.current) {\n                    viewEditorInstance.current.set(codeEditorInstance.current!.get())\n                    localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(codeEditorInstance.current!.get()))\n                }\n            }\n        })\n        // right view editor\n        viewEditorInstance.current = new JSONEditor(viewEditorRef.current!, {\n            mode: 'tree'\n        })\n\n        // 초기값 세팅\n        if (R.isNullish(localStorage.getItem(LOCAL_STORAGE_KEY))) {\n            // localStorage 미존재 -> {} 으로 초기화\n            codeEditorInstance.current!.set(EMPTY_OBJECT)\n        } else {\n            // localStorage 존재 -> 기존값 사용\n            codeEditorInstance.current!.set(JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY)!))\n        }\n        viewEditorInstance.current.set(codeEditorInstance.current!.get())\n\n        // destructor\n        return () => {\n            if (codeEditorInstance.current) {\n                codeEditorInstance.current.destroy()\n            }\n            if (viewEditorInstance.current) {\n                viewEditorInstance.current.destroy()\n            }\n        }\n    }, [])\n\n    return (\n        <>\n            <Split direction=\"horizontal\" cursor=\"col-resize\" style={{display: 'flex', height: '100vh', width: '100vw', padding: '10px'}}>\n                <div ref={codeEditorRef} style={{width: '50%', height: '100%'}}></div>\n                <div ref={viewEditorRef} style={{width: '50%', height: '100%'}}></div>\n            </Split>\n        </>\n    )\n}","/*\n *  @(#)Constant.tsx 2024.09.30\n *\n *  Copyright 2024 CKP Corp. All rights Reserved.\n *  CKP PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.\n */\n\nexport const Delimiter = {\n    COLON: ':',\n    SEMICOLON: ';',\n    COMMA: ',',\n    HYPHEN: '-',\n    SPACE_HYPHEN_SPACE: ' - ',\n    UNDERSCORE: '_',\n    SPACE: ' ',\n    EMPTY: '',\n    PIPE: '|',\n    SLASH: '/',\n    EQUALS: '=',\n    AMPERSAND: '&',\n    PLUS: '+',\n    EXCLAMATION_MARK: '!',\n    QUESTION_MARK: '?',\n    OPEN_PARENTHESIS: '(',\n    CLOSE_PARENTHESIS: ')',\n    OPEN_BRACE: '{',\n    CLOSE_BRACE: '}',\n    NEW_LINE: '\\n',\n}\n\nexport const NOT_APPLICABLE = 'N/A'\nexport const EMPTY_OBJECT = {}\nexport const EMPTY_ARRAY = []\nexport const NULL = null    // 명시적인 없음 표현 (== empty)\nexport const UNDEFINED = undefined  // JAVA 에서의 null 표현 (== null)","// extracted by mini-css-extract-plugin"],"names":["ReactPropTypesSecret","__webpack_require__","emptyFunction","emptyFunctionWithReset","resetWarningCache","module","exports","shim","props","propName","componentName","location","propFullName","secret","err","name","getShim","isRequired","ReactPropTypes","array","bigint","bool","func","number","object","string","symbol","any","arrayOf","element","elementType","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes","PropTypes","global","window","ssr","split_es_document","undefined","document","addEventListener","removeEventListener","getBoundingClientRect","HORIZONTAL","NOOP","calc","filter","prefix","el","createElement","style","cssText","length","shift","isString","v","String","elementOrSelector","ele","querySelector","getOption","options","def","value","getGutterSize","gutterSize","isFirst","isLast","gutterAlign","defaultGutterFn","i","gutterDirection","gut","className","defaultElementStyleFn","dim","size","gutSize","defaultGutterStyleFn","obj","split_es","idsOption","dimension","clientAxis","position","positionEnd","clientSize","elements","ids","Array","from","parent","firstElement","parentNode","parentStyle","getComputedStyle","parentFlexDirection","flexDirection","sizes","map","minSize","minSizes","isArray","maxSize","Infinity","maxSizes","expandToMin","snapOffset","snapOffsets","dragInterval","direction","cursor","gutter","elementStyle","gutterStyle","setElementSize","Object","keys","forEach","prop","getSizes","getMousePosition","e","touches","adjust","offset","a","b","percentage","drag","dragging","start","dragOffset","Math","round","call","calculateSizes","aBounds","bBounds","end","trimToMin","sizesToTrim","parentSize","innerSize","computedStyle","parseFloat","paddingLeft","paddingRight","paddingTop","paddingBottom","reduce","excessPixels","toSpare","pixelSizes","pixelSize","elementGutterSize","elementMinSize","push","newPixelSize","takenPixels","min","stopDragging","self","stop","move","userSelect","webkitUserSelect","MozUserSelect","pointerEvents","body","startDragging","button","preventDefault","bind","pairs","adjustToMin","pair","id","temp","gutterElement","insertBefore","computedSize","setSizes","newSizes","trimmed","newSize","collapse","destroy","preserveStyles","preserveGutter","removeChild","objectWithoutProperties","exclude","target","k","prototype","hasOwnProperty","indexOf","SplitWrapper","superclass","apply","arguments","__proto__","create","constructor","componentDidMount","ref","children","rest","index","__isSplitGutter","split","componentDidUpdate","prevProps","this$1","collapsed","prevMinSize","prevSizes","prevCollapsed","needsRecreate","otherProps","accum","same","minSizeChanged","minSizeI","pairB","previousSibling","sizeChanged","sizeI","Number","isInteger","componentWillUnmount","render","onDrag","onDragStart","onDragEnd","rest$1","react","assign","Component","propTypes","prop_types_default","defaultProps","LOCAL_STORAGE_KEY","JsonEditor","codeEditorRef","useRef","viewEditorRef","codeEditorInstance","viewEditorInstance","useEffect","current","JSONEditor","mode","onChange","set","get","localStorage","setItem","JSON","stringify","n","getItem","EMPTY_OBJECT","parse","jsx_runtime","jsx","Fragment","jsxs","Split","display","height","width","padding","div","Delimiter","COLON","SEMICOLON","COMMA","HYPHEN","SPACE_HYPHEN_SPACE","UNDERSCORE","SPACE","EMPTY","PIPE","SLASH","EQUALS","AMPERSAND","PLUS","EXCLAMATION_MARK","QUESTION_MARK","OPEN_PARENTHESIS","CLOSE_PARENTHESIS","OPEN_BRACE","CLOSE_BRACE","NEW_LINE","NOT_APPLICABLE"],"sourceRoot":""}