{"version":3,"file":"static/chunks/app/cidr/page-e96d35756ffffb1c.js","mappings":"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","sources":["webpack://_N_E/","webpack://_N_E/./app/cidr/page.tsx","webpack://_N_E/../common/constant/Constant.tsx"],"sourcesContent":["import(/* webpackMode: \"eager\" */ \"/Users/user/com/git/nyx/nyx-frontend/src/kr/center/app/cidr/page.tsx\");\n","/*\n *  @(#)page.tsx 2024.10.02\n *\n *  Copyright 2024 CKP Corp. All rights Reserved.\n *  CKP PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.\n */\n\n'use client'\n\nimport {useState} from 'react'\nimport CIDR from 'ip-cidr'\nimport {Delimiter, EMPTY_STRING} from '@nyx/kr-common/constant/Constant'\n\nfunction calculateCidrDetails(cidrInput: string) {\n    try {\n        return new CIDR(cidrInput)\n    } catch (e) {\n        return null // Handle invalid CIDR\n    }\n}\n\n/**\n * https://github.com/ortexx/ip-cidr\n * https://mxtoolbox.com/subnetcalculator.aspx\n */\nexport default function KrIp() {\n    const [cidr, setCidr] = useState<string>(EMPTY_STRING)\n    const [ip, setIp] = useState<string>(EMPTY_STRING)\n    const [calculationResult, setCalculationResult] = useState<any>(null)\n\n    const handleCalculateButtonClick = () => {\n        const result = calculateCidrDetails(cidr)\n        setCalculationResult(result)\n        setIp(result!.start())\n    }\n\n    const handleIpChange = (ip: string) => {\n        return calculationResult.contains(ip)\n    }\n\n    return (\n        <div>\n            <h1>CIDR Calculator</h1>\n            <input\n                type=\"text\"\n                placeholder=\"Enter CIDR (e.g,. 1.0.0.14/12)\"\n                value={cidr}\n                onChange={(e) => setCidr(e.target.value)}\n            />\n            <button onClick={handleCalculateButtonClick}>Calculate</button>\n\n            {calculationResult && (\n                <div style={{marginTop: '20px'}}>\n                    <h2>CIDR Result</h2>\n                    <table style={{width: '100%', backgroundColor: '#f0f0f0'}}>\n                        <tbody>\n                        <tr>\n                            <td><strong>Input IP</strong></td>\n                            <td>{calculationResult.cidr}</td>\n                            <td><strong>CIDR Range</strong></td>\n                            <td style={{color: 'red'}}>{calculationResult.start() + Delimiter.SPACE_HYPHEN_SPACE + calculationResult.end()}</td>\n                        </tr>\n                        <tr>\n                            <td><strong>Input IP (Long)</strong></td>\n                            <td>{calculationResult.address.bigInteger()[0]}</td>\n                            <td><strong>CIDR Range (Long)</strong></td>\n                            <td>{calculationResult.start({type: 'bigInteger'}) + Delimiter.SPACE_HYPHEN_SPACE + calculationResult.end({type: 'bigInteger'})}</td>\n                        </tr>\n                        <tr>\n                            <td><strong>Input IP (Hex)</strong></td>\n                            <td>{calculationResult.address.toHex()}</td>\n                            <td><strong>CIDR Range (Hex)</strong></td>\n                            <td>{calculationResult.addressStart.toHex() + Delimiter.SPACE_HYPHEN_SPACE + calculationResult.addressEnd.toHex()}</td>\n                        </tr>\n                        </tbody>\n                    </table>\n                </div>\n\n            )}\n\n            {calculationResult && (\n                <div style={{marginTop: '20px'}}>\n                    <h2>CIDR Range</h2>\n                    <input\n                        type=\"text\"\n                        placeholder=\"Enter IP\"\n                        value={ip}\n                        onChange={(e) => setIp(e.target.value)}\n                    />\n                    <p>\n                        The IP address {ip} is{Delimiter.SPACE}\n                        {handleIpChange(ip) ?\n                            <span style={{color: 'green'}}>inside</span> : <span style={{color: 'red'}}>outside</span>} of the range\n                    </p>\n                </div>\n            )}\n        </div>\n    )\n}","/*\n *  @(#)Constant.tsx 2024.09.30\n *\n *  Copyright 2024 CKP Corp. All rights Reserved.\n *  CKP PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.\n */\n\nexport const Delimiter = {\n    COLON: ':',\n    SEMICOLON: ';',\n    COMMA: ',',\n    HYPHEN: '-',\n    SPACE_HYPHEN_SPACE: ' - ',\n    UNDERSCORE: '_',\n    SPACE: ' ',\n    PIPE: '|',\n    EQUALS: '=',\n    AMPERSAND: '&',\n    EXCLAMATION_MARK: '!',\n    QUESTION_MARK: '?',\n    OPEN_PARENTHESIS: '(',\n    CLOSE_PARENTHESIS: ')',\n    OPEN_BRACE: '{',\n    CLOSE_BRACE: '}',\n    NEW_LINE: '\\n',\n}\n\nexport const NOT_APPLICABLE = 'N/A'\nexport const EMPTY_STRING = ''\nexport const EMPTY_OBJECT = {}\nexport const EMPTY_ARRAY = []"],"names":["Promise","resolve","then","__webpack_require__","bind","KrIp","cidr","setCidr","useState","EMPTY_STRING","ip","setIp","calculationResult","setCalculationResult","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","jsxs","div","jsx","h1","input","type","placeholder","value","onChange","e","target","button","onClick","result","calculateCidrDetails","cidrInput","CIDR","start","style","marginTop","h2","table","width","backgroundColor","tbody","tr","td","strong","color","Delimiter","SPACE_HYPHEN_SPACE","end","address","bigInteger","toHex","addressStart","addressEnd","p","SPACE","handleIpChange","contains","span","COLON","SEMICOLON","COMMA","HYPHEN","UNDERSCORE","PIPE","EQUALS","AMPERSAND","EXCLAMATION_MARK","QUESTION_MARK","OPEN_PARENTHESIS","CLOSE_PARENTHESIS","OPEN_BRACE","CLOSE_BRACE","NEW_LINE","NOT_APPLICABLE","EMPTY_OBJECT"],"sourceRoot":""}